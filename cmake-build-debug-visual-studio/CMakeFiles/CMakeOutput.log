The system is: Windows - 10.0.22621 - AMD64
Compiling the C compiler identification source file "CMakeCCompilerId.c" succeeded.
Compiler: C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.35.32215/bin/Hostx64/x64/cl.exe 
Build flags: 
Id flags:  

The output was:
0
Microsoft (R) C/C++ Optimizing Compiler Version 19.35.32217.1 for x64
Copyright (C) Microsoft Corporation.  All rights reserved.

CMakeCCompilerId.c
Microsoft (R) Incremental Linker Version 14.35.32217.1
Copyright (C) Microsoft Corporation.  All rights reserved.

/out:CMakeCCompilerId.exe 
CMakeCCompilerId.obj 


Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "CMakeCCompilerId.exe"

Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "CMakeCCompilerId.obj"

The C compiler identification is MSVC, found in "C:/Users/hedar/OneDrive/Desktop/C++/Networking/uTorrent/cmake-build-debug-visual-studio/CMakeFiles/3.24.2/CompilerIdC/CMakeCCompilerId.exe"

Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
Compiler: C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.35.32215/bin/Hostx64/x64/cl.exe 
Build flags: 
Id flags:  

The output was:
0
Microsoft (R) C/C++ Optimizing Compiler Version 19.35.32217.1 for x64
Copyright (C) Microsoft Corporation.  All rights reserved.

CMakeCXXCompilerId.cpp
Microsoft (R) Incremental Linker Version 14.35.32217.1
Copyright (C) Microsoft Corporation.  All rights reserved.

/out:CMakeCXXCompilerId.exe 
CMakeCXXCompilerId.obj 


Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CMakeCXXCompilerId.exe"

Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CMakeCXXCompilerId.obj"

The CXX compiler identification is MSVC, found in "C:/Users/hedar/OneDrive/Desktop/C++/Networking/uTorrent/cmake-build-debug-visual-studio/CMakeFiles/3.24.2/CompilerIdCXX/CMakeCXXCompilerId.exe"

Detecting C compiler ABI info compiled with the following output:
Change Dir: C:/Users/hedar/OneDrive/Desktop/C++/Networking/uTorrent/cmake-build-debug-visual-studio/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/JetBrains/CLion 2022.3.3/bin/ninja/win/x64/ninja.exe cmTC_5dd12 && [1/2] Building C object CMakeFiles\cmTC_5dd12.dir\CMakeCCompilerABI.c.obj
[2/2] Linking C executable cmTC_5dd12.exe



Detecting CXX compiler ABI info compiled with the following output:
Change Dir: C:/Users/hedar/OneDrive/Desktop/C++/Networking/uTorrent/cmake-build-debug-visual-studio/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/JetBrains/CLion 2022.3.3/bin/ninja/win/x64/ninja.exe cmTC_fcb91 && [1/2] Building CXX object CMakeFiles\cmTC_fcb91.dir\CMakeCXXCompilerABI.cpp.obj
[2/2] Linking CXX executable cmTC_fcb91.exe



Performing C++ SOURCE FILE Test HAVE_STDATOMIC succeeded with the following output:
Change Dir: C:/Users/hedar/OneDrive/Desktop/C++/Networking/uTorrent/cmake-build-debug-visual-studio/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/JetBrains/CLion 2022.3.3/bin/ninja/win/x64/ninja.exe cmTC_8635e && [1/2] Building CXX object CMakeFiles\cmTC_8635e.dir\src.cxx.obj
C:\Users\hedar\OneDrive\Desktop\C++\Networking\uTorrent\cmake-build-debug-visual-studio\CMakeFiles\CMakeTmp\src.cxx(17): warning C4312: 'type cast': conversion from 'unsigned int' to 'void *' of greater size
[2/2] Linking CXX executable cmTC_8635e.exe


Source file was:
#include <atomic>
#include <cstdint>

void test(volatile std::atomic<std::int64_t> &a)
{
    std::int64_t v = a.load(std::memory_order_acquire);
    while (!a.compare_exchange_strong(v, v + 1,
                                      std::memory_order_acq_rel,
                                      std::memory_order_acquire)) {
        v = a.exchange(v - 1);
    }
    a.store(v + 1, std::memory_order_release);
}

int main(int, char **)
{
    void *ptr = (void*)0xffffffc0; // any random pointer
    test(*reinterpret_cast<std::atomic<std::int64_t> *>(ptr));
    return 0;
}
